//Albert Cerezo & Eloy Gil - Group 11
const False = 0
const True = 1
range Bool = False..True
set BoolActions = {setTrue, setFalse, [False], [True]}
BOOLVAR = VAL[False],
VAL[v:Bool] = (setTrue -> VAL[True]
|setFalse -> VAL[False]
|[v] -> VAL[v]
).
||VARS = (flag1:BOOLVAR || flag2:BOOLVAR || turn:TURNVAR).

set TurnActions = {set1,set2,[1],[2]}
TURNVAR = VAL[1],
VAL[i:Turn] = ( set1 -> VAL[1] | set2 -> VAL[2] | [i] -> VAL[i] ).
||TURN = (turn:TURNVAR).

NEIGHBOR1 = (flag1.setTrue -> turn.set2 -> TEST),
TEST = (flag2[raised:Bool] -> turn[t:Turn] ->
	if (raised && t==2) then -> TEST)
	else (enter -> pickBerries -> exit -> flag1.setFalse -> NEIGHBOR1)
	) + {{flag1,flag2}.BoolActions, turn.TurnActions}.
NEIGHBOR2 = (flag2.setTrue -> turn.set1 -> TEST),
TEST = (flag1[raised:Bool] -> turn[t:Turn] ->
	if (raised && t==1) then (flag2.setFalse -> NEIGHBOR2)
	else (enter -> pickBerries -> exit -> flag2.setFalse -> NEIGHBOR2)
	) + {{flag1,flag2}.BoolActions}.

property MUTEX = (n1.enter -> n1.pickBerries -> n1.exit -> MUTEX | n2.enter -> n2.pickBerries -> n2.exit -> MUTEX).

||FIELD = (n1:NEIGHBOR1 ||n2: NEIGHBOR2 || {n1,n2}::VARS || MUTEX).

progress ENTER1 = {n1.enter} //NEIGHBOR 1 always gets to enter
progress ENTER2 = {n2.enter} //NEIGHBOR 2 always gets to enter

||GREEDY = FIELD << {n1.flag1.setTrue, n2.flag2.setTrue}.